name: 'Birdwatcher Agent'
description: 'An agent to monitor your Tinybird workspaces and resources'

inputs:
  slack_token:
    description: 'Slack Bot Token'
    required: false
  resend_api_key:
    description: 'Resend API Key'
    required: false
  google_application_credentials:
    description: 'Google Cloud credentials JSON string'
    required: false
  vertex_api_key:
    description: 'Google Vertex AI API Key'
    required: false
  google_cloud_project:
    description: 'Google Cloud Project ID'
    required: false
  google_cloud_location:
    description: 'Google Cloud Location'
    required: false
  anthropic_api_key:
    description: 'Anthropic API Key'
    required: false
  openai_api_key:
    description: 'OpenAI API Key'
    required: false
  model:
    description: 'Model to use (e.g. claude-4-sonnet-20250514, gpt-4o, gemini-1.5-flash)'
    required: true
  tinybird_token:
    description: 'Tinybird API Token'
    required: true
  tinybird_host:
    description: 'Tinybird Host'
    required: true
  python_version:
    description: 'Python version to use'
    required: false
    default: '3.11'
  working_directory:
    description: 'Directory containing the Birdwatcher agent code'
    required: false
    default: 'agents/birdwatcher'
  mission:
    description: 'Mission to use for the Birdwatcher agent. See the agents/birdwatcher/missions directory for available missions or create your own.'
    required: false
    default: 'base'
  prompt:
    description: 'Prompt to use for the Birdwatcher agent'
    required: true
    default: 'Report endpoint errors in the last 24 hours'

runs:
  using: "composite"
  steps:
    - uses: actions/checkout@v4
      with:
        repository: tinybirdco/ai
        fetch-depth: 1

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: ${{ inputs.python_version }}

    - name: Install uv
      shell: bash
      run: |
        curl -LsSf https://astral.sh/uv/install.sh | sh
        echo "$HOME/.cargo/bin" >> $GITHUB_PATH

    - name: Install dependencies
      shell: bash
      run: |
        cd ${{ inputs.working_directory }}
        uv sync

    - name: Run notification checks
      shell: bash
      env:
        # Set the model name to use
        MODEL: ${{ inputs.model }}
        # Now configure one of the supported providers
        # Configure Gemini via Vertex AI
        GOOGLE_APPLICATION_CREDENTIALS: ${{ inputs.google_application_credentials }}
        GOOGLE_CLOUD_PROJECT: ${{ inputs.google_cloud_project }}
        GOOGLE_CLOUD_LOCATION: ${{ inputs.google_cloud_location }}
        VERTEX_API_KEY: ${{ inputs.vertex_api_key }}
        # or configure the Anthropic api key
        ANTHROPIC_API_KEY: ${{ inputs.anthropic_api_key }}
        # or configure the OpenAI api key
        OPENAI_API_KEY: ${{ inputs.openai_api_key }}
        # Configure Slack
        SLACK_TOKEN: ${{ inputs.slack_token }}
        # Configure Tinybird Workspace or Organization token
        # https://cloud.tinybird.co/tokens
        TINYBIRD_TOKEN: ${{ inputs.tinybird_token }}
        # https://www.tinybird.co/docs/api-reference?#regions-and-endpoints
        TINYBIRD_HOST: ${{ inputs.tinybird_host }}
        RESEND_API_KEY: ${{ inputs.resend_api_key }}
        
      run: |
        cd ${{ inputs.working_directory }}
        uv run python birdwatcher.py --prompt "${{ inputs.prompt }}" -u github --mission "${{ inputs.mission }}"
